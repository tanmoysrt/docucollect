# Generated by Django 2.2.12 on 2022-09-28 18:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentAuthProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPersonalProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('roll_no', models.CharField(max_length=20, null=True)),
                ('phone_no', models.CharField(max_length=20, null=True)),
                ('year', models.CharField(choices=[('first', 'First Year'), ('second', 'Second Year'), ('third', 'Third Year'), ('fourth', 'Fourth Year')], default='first', max_length=20)),
                ('graduation_year', models.CharField(default='2026', max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineCoursesProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(default='')),
                ('issued_by', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('document', models.TextField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_courses_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('internship', 'Internship'), ('placement', 'Placement')], default='internship', max_length=20)),
                ('duration_months', models.IntegerField(default=0)),
                ('company', models.TextField(default='')),
                ('month', models.IntegerField(default=1)),
                ('year', models.IntegerField(default=2022)),
                ('document', models.TextField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HackathonProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organizer', models.CharField(default='', max_length=250)),
                ('certificate_type', models.CharField(choices=[('winner', 'Winner'), ('first_runner', 'First Runner'), ('second_runner', 'Second Runner'), ('special_mentioned', 'Special Mentioned'), ('top_five', 'Top 5'), ('top_ten', 'Top 10'), ('top_fifty', 'Top 50'), ('top_fifty', 'Top 50'), ('participant', 'Participant'), ('other', 'Other')], default='winner', max_length=50)),
                ('month', models.IntegerField(default=1)),
                ('year', models.IntegerField(default=2022)),
                ('document', models.TextField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
